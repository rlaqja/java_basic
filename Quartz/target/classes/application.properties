# Server Properties
server.port=8888
#=============================================
#Spring Boot 내장 웹 서버에서 응답 데이터를 압축을 활성화
server.compression.enabled= true
#=============================================
#애플리케이션 이름 설정. 현재는 "JobScheduler"이거로 되어있음.
spring.application.name=JobScheduler

#DataSource
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://my5509.gabiadb.com:3306/devms
#spring.datasource.username=msnks
#spring.datasource.password=msnks201710

#Oracle_DB
spring.datasource.driver-class-name= oracle.jdbc.OracleDriver
spring.datasource.url= jdbc:oracle:thin:@192.168.0.201:1521/ORA
spring.datasource.username=SCOTT
spring.datasource.password=TIGER
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@127.0.0.1:1521:xe (Oracle 설치 서버 IP +  포트 + DB 이름)
#spring.datasource.username=ID
#spring.datasource.password=PW

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

## Hibernate Logging
logging.level.org.hibernate.SQL=DEBUG

#Log
spring.output.ansi.enabled=always
logging.level.root = DEBUG
logging.level.org.springframework = INFO

#Quartz
#=============================================
#Quartz스케줄러의 이름을 설정합니다.
spring.quartz.scheduler-name=QuartzScheduler
#=============================================
#Quart스케줄러의 인스턴스ID를 설정합니다."AUTO로 설정하면 자동으로 생성"
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
#=============================================
#Quartz스레드 풀의 스레드 갯수를 설정
spring.quartz.properties.org.quartz.threadPool.threadCount = 20
#=============================================
#생성된 스레드의 이름 접두사를 설정
spring.quartz.properties.org.quartz.threadPool.threadNamePrfix=QuartzScheduler
#=============================================
#데이터베이스 테이블의 접두사를 설정합니다.
spring.quartz.properties.org.quartz.jobStore.tablePrefix=QRTZ_
#=============================================
#클로스터 여부를 설정"ture"로 설정하면 여러노드에서 Quartz스케줄러를 사용할 수 있음
spring.quartz.properties.org.quartz.jobStore.isClustered=true
#=============================================
#사용할 JobStore클래스를 설정 //현재는 org.quartz.impl.jdbcjobstore.JobStoreTX 사용중
spring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
#=============================================
#데이터 베이스 드라이버에 특화된 클래스를 설정
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate    
#====================================================================
# 값이 ture이면 DB에 JobDataMap에 저장되는 값이 binary가 아닌 String 값으로 저장된다.
spring.quartz.properties.org.quartz.jobStore.uesProperties=true
#====================================================================
# Job이 실행되어야 하는데 서버가 셧다운 되었거나 쓰레드가 부족한 경우에 제시간에 실행이 안될 수 있는데 이 경우를 misfire되었다고 함.
#Trigger가 misfire된 것으로 간주되는 시간으로1분이 지나면 misfire되었다고 판단함.
spring.quartz.properties.org.quartz.jobStore.misfireThreshold=60000
#====================================================================

